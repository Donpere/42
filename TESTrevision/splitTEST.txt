#include <stdlib.h>
#include <stdio.h>


ft_count
// on a BESOIN du nombre de mots pour le nombre de lignes du tableau
// on cree un compteur pour visiter la string i
// et un compteur pour le nombre de mots dans la string

// on visite la string, on cherche la fin de string

// premier cas, on n'est pas sur un separateur

// count ajoute 1 mot puis
// on rentre dans une boucle pour aller au mot suivant

// gestion du cas ou il y a plusieurs separateurs et on n'est pas en bout de string
// on retourne au debut de while verifier qu'on est pas en fin de chaine


ft_setmalloc

// i pour avancer dans la string
// letter pour la lettre dans chaque mot
// line pour avancer dans les lignes

// lire la chaine jusqu'au bout

	// reinitialise lettre pour chaque ligne

	// CAS 1 : PAS de separateur

		// on a BESOIN de la longueur du mot
		// tant que : ni en fin de string ni sur separateur
		// avancer dans la lettre du mot en cours, avancer dans la string

		// malloc une ligne du nombre de caractere du mot + '\0'

		// gestion malloc pas fonctionne

		// passe line suivante

	// CAS 2 : SEPARATEUR, on avance dans la string

// retourne le nombre de lignes pour pouvoir mettre fin de colonne tab a NULL
}



ft_filltab
{
// i pour avancer dans la chaine, 
// line pour le numero de ligne, 
// l pour avancer dans chaque ligne

// tant que je ne suis pas en fin de chaine initiale

// je me remets en debut de ligne courante dans le tableau


		// si pas SEPARATEUR

		// tant que je ne suis pas en fin de chaine initiale ou sur separateur

			// je copie chaque caractere de la chaine dans la ligne courante 
			// du tableau jusqu'a fin de chaine ou separateur

		// le mot ou la chaine est finie, je mets donc le caractere de fin de ligne

		// je passe a la ligne suivante

		// s'il y a un SEPARATEUR j'avance dans la chaine initiale

}



ft_free
{
// je cree un indice de ligne de tableau

	// tant qu'il y a une ligne dans le tableau
	// je free la ligne

// les lignes sont free, je peux free le tableau

}


ft_split
{
// on initie un tableau 2D
// on cree un entier pour les numeros de lignes 

// protection en cas de chaine vide


// on compte le nbre de mots pour pouvoir
// malloc le nombre de mots + 1 puisqu'on demarre a 0 :
// 4 lignes == 0, 1, 2, 3
// ON N'OUBLIE PAS gestion erreur malloc tab


// creation de chaque malloc de chaque morceau de chaine
// GESTION DU RETOUR ERREUR DE MALLOC DANS SETMALLOC : si erreur i=(-1)
// dans ce cas on va free tab pour eviter les fuites


// fermer la colonne de tab avec NULL pour pouvoir faire while(tab)


// ENFIN remplissage des lignes du tableau

// fin du split on renvoie l'adresse du tableau finalise

}



main
{

// affiche chaine de depart

// stocke le resultat dans le tableau 2 dim "tab"

//affichage du resultat, soit chaque mot separes par des "x" 
// qui sont copies dans chaque ligne de "tab" sans le separateur

//je desalloue tab
